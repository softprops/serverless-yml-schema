{
  "title": "JSON Schema for serverless framework",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "required": ["service", "provider"],
  "properties": {
    "service": {
      "type": "string",
      "description": "Unique service identifier"
    },
    "frameworkVersion": {
      "type": "string",
      "description": "Serverless framework version"
    },
    "custom": {
      "type": "object",
      "description": "Custom service configuration",
      "additionalItems": true
    },
    "functions": {
      "type": "object",
      "description": "Function definitions",
      "patternProperties": {
        "^.*$": {
          "type": "object",
          "description": "Function definition",
          "required": ["handler"],
          "properties": {
            "handler": {
              "type": "string",
              "description": "Function entrypont. Syntax will vary by runtime"
            },
            "role": {
              "type": "string"
            },
            "environment": {
              "description": "Environment variables",
              "patternProperties":  {
                "^.*$": {
                  "type": "string"
                }
              }
            },
            "name": {
              "type": "string",
              "description": "Deployed AWS Lambda name"
            },
            "description": {
              "type": "string",
              "description": "Description of the AWS lambda function"
            },
            "runtime": {
              "type": "string",
              "default": "${self:provider.runtime}"
            },
            "memorySize": {
              "type": "integer",
              "description": "AWS Lambda max memory, in MB",
              "default": 1024
            },
            "timeout": {
              "type": "integer",
              "description": "AWS Lambda timeout, in seconcs",
              "default": 6
            },
            "reservedConcurrency": {
              "type": "integer",
              "description": "AWS Lambda reserved concurrency limit for this function. By default, AWS account concurrency limit"
            },
            "onError": {
              "type": ["string","object"],
              "description": "Dead letter queue where messages are sent if the function fails. Currently only supports SNS. https://serverless.com/framework/docs/providers/aws/guide/functions#dead-letter-queue-dlq",
              "pattern": "^arn:aws:sns:.+|\\$\\{.+\\}$",
              "properties": {
                "Fn::ImportValue": {
                  "type": "string",
                  "description": "Function name"
                }
              }
            },
            "events": {
              "type": "array",
              "description": "List of event triggers",
              "items": {
                "type": "object",
                "description": "Event configuration",
                "patternProperties": {
                  "http": {
                    "type": "object",
                    "description": "API Gateway HTTP trigger",
                    "required": ["path", "method"],
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "HTTP path that will trigger function"
                      },
                      "method": {
                        "type": "string",
                        "description": "HTTP method that will trigger function",
                        "default": "get"
                      }
                    }
                  },
                  "cognitoUserPool": {
                    "type": "object",
                    "description": "AWS Cognito UserPool trigger",
                    "required": ["pool", "trigger"],
                    "properties": {
                      "pool": {
                        "type": "string",
                        "description": "AWS Cognito UserPool ID"
                      },
                      "trigger": {
                        "enum": [
                          "CreateAuthChallenge",
                          "CustomMessage",
                          "DefineAuthChallenge",
                          "PostAuthentication",
                          "PostConfirmation",
                          "PreAuthentication",
                          "PreSignUp",
                          "VerifyAuthChallengeResponse"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "package": {
      "type": "object",
      "description": "Function packaging configuration",
      "properties": {
        "individually": {
          "type":"boolean",
          "description": "Individual packaging for each function. If true you must provide package for each function. Defaults to false",
          "default": false
        },
        "exclude": {
          "type": "array",
          "description": "List of exclude patterns",
          "items": {
            "type": "string",
            "description": "Package exclusion pattern"
          }
        },
        "include": {
          "type": "array",
          "decription": "List of include patterns",
          "items": {
            "type": "string",
            "description": "Package inclusion pattern"
          }
        }
      }
    },
    "plugins": {
      "type":"array",
      "description": "Serverless framework plugins",
      "items": {
        "type": "string",
        "description": "plugin identifier"
      }
    },
    "provider": {
      "type": "object",
      "description": "FaaS provider settings",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "description": "FaaS provider name",
          "enum": ["aws","google"],
          "default":"aws"
        },
        "runtime": {
          "type": "string",
          "description": "AWS Lambda runtime",
          "enum": ["nodejs8.10", "nodejs6.10", "python3.6", "python3.7", "python2.7", "ruby2.5", "java8", "go1.x", "dotnetcore2.1", "dotnetcore2.0", "dotnetcore1.0", "provided", "rust"],
          "default": "provided"
        },
        "memorySize": {
          "type": "number",
          "description": "Default amount of memory to allocate per function",
          "enum": [128,256],
          "default": 128
        },
        "stackName": {
          "type": "string",
          "description": "custom name for the CloudFormation stack"
        },
        "apiName": {
          "type": "string",
          "description": "custom name for the API gateway"
        },
        "profile": {
          "type": "string",
          "description": "default profile for this service"
        },
        "timeout": {
          "type":"number",
          "description":"amount of time in seconds to timeout lambda",
          "default": 6
        },
        "logRetentionInDays": {
          "type":"number",
          "description":"number of days to keep streams in a cloud watch log group",
          "default": 14
        },
        "deploymentPrefix": {
          "type":"string",
          "description":"S3 prefix under which deployed artifacts should be stored",
          "default": "serverless"
        },
        "versionFunctions": {
          "type": "boolean",
          "description": "Optional function versioning",
          "default": false
        },
        "environment": {
          "type": "object",
          "description": "Service wide environment variables",
          "patternProperties": {
            "^.*$": {
              "type": "string",
              "description": "env entry"
            }
          }
        },
        "endpointType": {
          "type": "string",
          "description": "Optional endpoint configuration for API Gateway REST API",
          "enum": ["edge", "regional"],
          "default": "edge"
        },
        "region": {
          "type": "string",
          "description": "What region to deploy this function",
          "default": "us-east1"
        },
        "stackTags": {
          "type": "array",
          "description": "optional stack tags",
          "items": {
            "description":"tag",
            "patternProperties": {
              "^.*$": {
                "type": "string",
                "description": "value"
              }
            }
          }
        },
        "tags": {
          "type": "array",
          "description": "Optional service wide function tags",
          "items": {
            "description":"tag",
            "patternProperties": {
              "^.*$": {
                "type": "string",
                "description": "value"
              }
            }
          }
        }
      }
    }
  }
}
